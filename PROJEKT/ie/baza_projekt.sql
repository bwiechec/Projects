-- phpMyAdmin SQL Dump
-- version 4.7.4
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1
-- Czas generowania: 07 Gru 2017, 11:24
-- Wersja serwera: 10.1.26-MariaDB
-- Wersja PHP: 7.1.9

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET AUTOCOMMIT = 0;
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Baza danych: `projekt`
--

-- --------------------------------------------------------

--
-- Struktura tabeli dla tabeli `odpowiedzi`
--

CREATE TABLE `odpowiedzi` (
  `id_odpowiedzi` int(11) NOT NULL,
  `id_uzytkownika` int(11) DEFAULT NULL,
  `id_pytania` int(11) DEFAULT NULL,
  `odpowiedz` text NOT NULL,
  `data_dodania` date NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Zrzut danych tabeli `odpowiedzi`
--

INSERT INTO `odpowiedzi` (`id_odpowiedzi`, `id_uzytkownika`, `id_pytania`, `odpowiedz`, `data_dodania`) VALUES
(1, 1, 1, '<pre>#include &lt;iostream&gt;\r\nusing namespace std;\r\nmain()\r\n{\r\n double a, b, x;\r\n cout&lt;&lt;\"podaj a, b:\"&lt;&lt;endl;\r\n cin&gt;&gt;a&gt;&gt;b;\r\n if (a!=0) {x=-b/a; cout&lt;&lt;\"x = \"&lt;&lt;x&lt;&lt;endl;}\r\n else if (b==0) cout&lt;&lt;\"nieskonczenie wiele rozwiazan\"&lt;&lt;endl;\r\n      else cout&lt;&lt;\"rownanie sprzeczne\"&lt;&lt;endl;\r\n//system(\"pause\");\r\n return 0;\r\n}</pre>', '2017-11-25'),
(2, 1, 2, '<pre>#include &lt;iostream&gt;\r\nusing namespace std;\r\nmain()\r\n{\r\n int n, s;\r\n cout&lt;&lt;\"podaj n: \";\r\n cin&gt;&gt;n;\r\n s=n*(n+1)/2;\r\n cout&lt;&lt;\"s = \"&lt;&lt;s&lt;&lt;endl;\r\n//system(\"pause\");\r\n return 0;\r\n}</pre>\r\n', '2017-11-25'),
(3, 1, 3, '<pre>#include &lt;iostream&gt;\r\nusing namespace std;\r\nmain()\r\n{\r\n int n, s;\r\n cout&lt;&lt;\"podaj n: \";\r\n cin&gt;&gt;n;\r\n if (n&gt;=1) {s=n*(n+1)/2;  cout&lt;&lt;\"s = \"&lt;&lt;s&lt;&lt;endl;}\r\n else cout&lt;&lt;\"n&lt;1\"&lt;&lt;endl;\r\n//system(\"pause\");\r\n return 0;\r\n}</pre>', '2017-11-25'),
(4, 1, 4, '<pre>#include &lt;iostream&gt;\r\n#include &lt;cmath&gt;\r\nusing namespace std;\r\nmain()\r\n{\r\n double a, b, c, delta, x1, x2;\r\n cout&lt;&lt;\"podaj wspolczynniki rownania a, b, c:\"&lt;&lt;endl;\r\n cin&gt;&gt;a&gt;&gt;b&gt;&gt;c;\r\n if (a==0) cout&lt;&lt;\"to nie jest rownanie kwadratowe\"&lt;&lt;endl;\r\n else \r\n {\r\n  delta=b*b-4*a*c;\r\n  if (delta&lt;0) cout&lt;&lt;\"rownanie nie ma pierwiastkow\"&lt;&lt;endl;\r\n  else if (delta==0) {x1=-b/(2*a); cout&lt;&lt;\"x=\"&lt;&lt;x1&lt;&lt;endl;}\r\n       else \r\n       {\r\n        x1=(-b-sqrt(delta))/(2*a);\r\n        x2=(-b+sqrt(delta))/(2*a);\r\n        cout&lt;&lt;\"x1=\"&lt;&lt;x1&lt;&lt;\"	x2=\"&lt;&lt;x2&lt;&lt;endl;\r\n       }\r\n }\r\n//system(\"pause\");\r\n return 0;\r\n}</pre>', '2017-11-25'),
(5, 1, 5, '<pre>#include &lt;iostream&gt;\r\nusing namespace std;\r\nmain()\r\n{\r\n int n;\r\n cout&lt;&lt;\"podaj liczbe elementow n: \";\r\n cin&gt;&gt;n;\r\n int s=1, i=3;\r\n while (i&lt;=n+2)\r\n {\r\n  s=s*i;\r\n  i++;\r\n }\r\n cout&lt;&lt;\"s = \"&lt;&lt;s&lt;&lt;endl;\r\n//system(\"pause\");\r\n return 0;\r\n}</pre>', '2017-11-24'),
(6, 1, 6, '<pre>#include &lt;iostream&gt;\r\nusing namespace std;\r\nmain()\r\n{\r\n double s=0, a=0;\r\n do\r\n {\r\n  s+=a;        \r\n  cout&lt;&lt;\"podaj liczbe rzeczywista: \";\r\n  cin&gt;&gt;a;\r\n }\r\n while(a&lt;=50);\r\n cout&lt;&lt;\"suma = \"&lt;&lt;s&lt;&lt;endl;\r\n//system(\"pause\");      \r\n return 0;\r\n}</pre>', '2017-11-24'),
(7, 1, 7, '<pre>#include &lt;iostream&gt;\r\nusing namespace std;\r\n\r\nint oblicz (int n)\r\n{\r\n if (n==0) return 1;\r\n return oblicz(n-1)*n;\r\n}\r\n\r\nmain()\r\n{\r\n int n;\r\n cout&lt;&lt;\"podaj n: \";\r\n cin&gt;&gt;n;\r\n cout&lt;&lt;\"rekurencyjnie: \"&lt;&lt;n&lt;&lt;\"! = \"&lt;&lt;oblicz(n)&lt;&lt;endl;\r\n//system(\"pause\");\r\n return 0;\r\n}</pre>', '2017-11-24'),
(8, 1, 8, '<pre>#include &lt;iostream&gt;\r\nusing namespace std;\r\n\r\nint oblicz (int n)\r\n{\r\n if (n==1||n==2) return 1;\r\n return oblicz(n-1)+oblicz(n-2);\r\n}\r\n\r\nmain()\r\n{\r\n int n;\r\n cout&lt;&lt;\"podaj n: \";\r\n cin&gt;&gt;n;\r\n cout&lt;&lt;\"rekurencyjnie: \"&lt;&lt;n&lt;&lt;\" element ciagu = \"&lt;&lt;oblicz(n)&lt;&lt;endl;\r\n//system(\"pause\");\r\n return 0;\r\n}</pre>', '2017-11-23'),
(9, 1, 9, '<pre>#include &lt;iostream&gt;\r\nusing namespace std;\r\n\r\nvoid oblicz (int n, char a, char b, char c)\r\n{\r\n if (n&gt;0)\r\n {\r\n  oblicz(n-1,a,c,b);\r\n  cout&lt;&lt;a&lt;&lt;\" na \"&lt;&lt;b&lt;&lt;endl;\r\n  oblicz(n-1,c,b,a);\r\n }\r\n}\r\n\r\nmain()\r\n{\r\n int n;\r\n cout&lt;&lt;\"podaj liczbe krazkow n: \";\r\n cin&gt;&gt;n;\r\n cout&lt;&lt;\"rozwiazanie zagadki WIEZE HANOI:\"&lt;&lt;endl;\r\n oblicz(n,&apos;A&apos;,&apos;B&apos;,&apos;C&apos;);\r\n//system(\"pause\");\r\n return 0;\r\n}</pre>', '2017-11-23'),
(10, 1, 10, '<pre>#include &lt;iostream&gt;\r\n#include &lt;cmath&gt;\r\nusing namespace std;\r\n\r\nbool szukaj (double x0, double y0)\r\n{\r\n double d=abs(3*x0+4*y0-4)/sqrt(pow(3.0,2)+pow(4.0,2));\r\n if (d==0) return true;\r\n else return false;\r\n}\r\n\r\nmain()\r\n{\r\n double x0, y0;     \r\n cout&lt;&lt;\"podaj wspolrzedne punktu: \";\r\n cin&gt;&gt;x0&gt;&gt;y0;  \r\n if (szukaj(x0,y0)) cout&lt;&lt;\"punkt P=(\"&lt;&lt;x0&lt;&lt;\";\"&lt;&lt;y0&lt;&lt;\") lezy na prostej 3x+4y-4=0\"&lt;&lt;endl;   \r\n else cout&lt;&lt;\"punkt P=(\"&lt;&lt;x0&lt;&lt;\";\"&lt;&lt;y0&lt;&lt;\") nie lezy na prostej 3x+4y-4=0\"&lt;&lt;endl;   \r\n//system(\"pause\");  \r\n return 0;    \r\n}</pre>', '2017-11-23'),
(11, 1, 11, '<pre>#include &lt;iostream&gt;\r\n#include &lt;cmath&gt;\r\nusing namespace std;\r\n\r\nbool szukaj (double x1, double y1, double x2, double y2)\r\n{\r\n double AB, AP, PB;\r\n AB=sqrt(pow(x2-x1,2)+pow(y2-y1,2));\r\n AP=sqrt(pow(3-x1,2)+pow(-2-y1,2));\r\n PB=sqrt(pow(x2-3,2)+pow(y2+2,2));\r\n if (AP+PB==AB) return true;\r\n else return false;\r\n}</pre>\r\n\r\nmain()\r\n{\r\n double x1, y1, x2, y2;     \r\n cout&lt;&lt;\"podaj wspolrzedne punktu A: \";\r\n cin&gt;&gt;x1&gt;&gt;y1;\r\n cout&lt;&lt;\"podaj wspolrzedne punktu B: \";\r\n cin&gt;&gt;x2&gt;&gt;y2;\r\n if (szukaj(x1,y1,x2,y2)) cout&lt;&lt;\"punkt P nalezy do odcinka AB\"&lt;&lt;endl;\r\n else cout&lt;&lt;\"punkt P nie nalezy do odcinka AB\"&lt;&lt;endl;\r\n//system(\"pause\");      \r\n return 0;\r\n}</pre>', '2017-12-28'),
(12, 1, 12, '<pre>#include &lt;iostream&gt;\r\nusing namespace std;\r\n\r\nvoid dane (int &n, char nazwa)\r\n{\r\n cout&lt;&lt;\"podaj \"&lt;&lt;nazwa&lt;&lt;\": \";\r\n cin&gt;&gt;n;\r\n}\r\n\r\nint nwd (int a, int b)\r\n{\r\n int r;\r\n while (b&gt;0)\r\n {\r\n  r=a%b;\r\n  a=b;\r\n  b=r;\r\n }\r\n return a;\r\n}\r\n\r\nmain()\r\n{\r\n int a, b;\r\n dane(a,\'a\');\r\n dane(b,\'b\');\r\n cout&lt;&lt;\"NWD(\"&lt;&lt;a&lt;&lt;\",\"&lt;&lt;b&lt;&lt;\") = \"&lt;&lt;nwd(a,b)&lt;&lt;endl;\r\n//system(\"pause\");\r\n return 0;\r\n}</pre>', '2017-12-28'),
(13, 1, 13, '<pre>#include &lt;iostream&gt;\r\nusing namespace std;\r\n\r\nvoid dane (int &n, char nazwa)\r\n{\r\n cout&lt;&lt;\"podaj \"&lt;&lt;nazwa&lt;&lt;\": \";\r\n cin&gt;&gt;n;\r\n}\r\n\r\nint nwd (int a, int b)\r\n{\r\n if (b==0) return a;\r\n return nwd(b,a%b);\r\n}\r\n\r\nmain()\r\n{\r\n int a, b;\r\n dane(a,\'a\');\r\n dane(b,\'b\');\r\n cout&lt;&lt;\"NWD(\"&lt;&lt;a&lt;&lt;\",\"&lt;&lt;b&lt;&lt;\") = \"&lt;&lt;nwd(a,b)&lt;&lt;endl;\r\n//system(\"pause\");\r\n return 0;\r\n}</pre>', '2017-12-21'),
(14, 1, 14, '<pre>#include &lt;iostream&gt;\r\nusing namespace std;\r\n\r\nvoid dane (int &n, char nazwa)\r\n{\r\n cout&lt;&lt;\"podaj \"&lt;&lt;nazwa&lt;&lt;\": \";\r\n cin&gt;&gt;n;\r\n}\r\n\r\nint nwd (int a, int b)\r\n{\r\n while (a!=b)\r\n  if (a&gt;b) a-=b;\r\n  else b-=a;\r\n return a;\r\n}\r\n\r\nmain()\r\n{\r\n int a, b;\r\n dane(a,\'a\');\r\n dane(b,\'b\');\r\n cout&lt;&lt;\"NWD(\"&lt;&lt;a&lt;&lt;\",\"&lt;&lt;b&lt;&lt;\") = \"&lt;&lt;nwd(a,b)&lt;&lt;endl;\r\n//system(\"pause\");\r\n return 0;\r\n}</pre>', '2017-12-27'),
(15, 1, 15, '<pre>#include <iostream>\r\nusing namespace std;\r\n\r\nvoid dane (int &n, char nazwa)\r\n{\r\n cout&lt;&lt;\"podaj \"&lt;&lt;nazwa&lt;&lt;\": \";\r\n cin&gt;&gt;n;\r\n}\r\n\r\nint nwd (int a, int b)\r\n{\r\n if (a==b) return a;\r\n if (a>b) return nwd(a-b,b);\r\n return nwd(a,b-a);\r\n}\r\n\r\nmain()\r\n{\r\n int a, b;\r\n dane(a,\'a\');\r\n dane(b,\'b\');\r\n cout&lt;&lt;\"NWD(\"&lt;&lt;a&lt;&lt;\",\"&lt;&lt;b&lt;&lt;\") = \"&lt;&lt;nwd(a,b)&lt;&lt;endl;\r\n//system(\"pause\");\r\n return 0;\r\n}</pre>', '2017-12-20'),
(16, 1, 16, '<pre>#include <iostream>\r\nusing namespace std;\r\n\r\nvoid dane (int &n, char nazwa)\r\n{\r\n cout&lt;&lt;\"podaj \"&lt;&lt;nazwa&lt;&lt;\": \";\r\n cin&gt;&gt;n;\r\n}\r\n\r\nint nwd (int x, int y)\r\n{\r\n if (x==y) return x;\r\n if (x>y) return nwd(x-y,y);\r\n return nwd(x,y-x);\r\n}\r\n\r\nint nww (int a, int b)\r\n{\r\n return a*b/nwd(a,b);\r\n}\r\n\r\nmain()\r\n{\r\n int a,b;\r\n dane(a,\'a\');\r\n dane(b,\'b\');\r\n cout&lt;&lt;\"NWW(\"&lt;&lt;a&lt;&lt;\",\"&lt;&lt;b&lt;&lt;\") = \"&lt;&lt;nww(a,b)&lt;&lt;endl;\r\n//system(\"pause\");\r\n return 0;\r\n}</pre>', '2017-12-19'),
(17, 1, 17, '<pre>#include <iostream>\r\nusing namespace std;\r\nconst int MAX = 100;\r\n\r\nvoid oblicz (long liczba, int &i, int W[])\r\n{\r\n i=0;\r\n do\r\n {\r\n  W[i]=liczba % 2;\r\n  liczba=liczba/2;\r\n  i++;\r\n }  \r\n while (liczba!=0);\r\n}\r\n\r\nmain()\r\n{\r\n int W[MAX], dl;\r\n long liczba;\r\n cout&lt;&lt;\"podaj liczbe w systemie dziesietnym do zamiany: \";\r\n cin&gt;&gt;liczba;\r\n oblicz(liczba,dl,W);\r\n cout&lt;&lt;liczba&lt;&lt;\"(10) = \";\r\n for (int i=dl-1;i>=0;i--) cout&lt;&lt;W[i];\r\n cout&lt;&lt;\"(2)\"&lt;&lt;endl;\r\n//system(\"pause\");\r\n return 0;\r\n}</pre>', '2017-12-21'),
(18, 1, 18, '<pre>#include <iostream>\r\nusing namespace std;\r\nconst int MAX = 100;\r\n\r\ndouble oblicz (double A[], int n, double x)\r\n{\r\n double w=A[0];\r\n for (int i=1;i<=n;i++) w=w*x+A[i];\r\n return w;\r\n}</pre>\r\n\r\nmain()\r\n{\r\n double A[MAX], x;\r\n int n;\r\n cout&lt;&lt;\"podaj wartosc argumentu x: \";\r\n cin&gt;&gt;x;\r\n cout&lt;&lt;\"podaj stopien wielomianu n: \";\r\n cin&gt;&gt;n;\r\n cout&lt;&lt;\"podaj \"&lt;&lt;n+1&lt;&lt;\" wspolczynnikow wielomianu:\"&lt;&lt;endl;\r\n for (int i=0;i<=n;i++)\r\n {\r\n  cout&lt;&lt;\"A[\"&lt;&lt;i&lt;&lt;\"] = \";\r\n  cin&gt;&gt;A[i];\r\n }\r\n cout&lt;&lt;\"iteracyjnie: wynik = \"&lt;&lt;oblicz(A,n,x)&lt;&lt;endl;\r\n//system(\"pause\");\r\n return 0;\r\n}</pre>', '2017-12-21'),
(19, 1, 19, '<pre>#include <iostream>\r\nusing namespace std;\r\nconst int MAX = 100;\r\n\r\nlong oblicz (int A[], int n)\r\n{\r\n long w=A[0];\r\n for (int i=1;i<=n;i++) w=w*2+A[i];\r\n return w;\r\n}\r\n\r\nmain()\r\n{\r\n int A[MAX];\r\n long w;\r\n int n;\r\n cout&lt;&lt;\"podaj liczbe cyfr wczytywanej liczby binarnej: \";\r\n cin&gt;&gt;n;\r\n cout&lt;&lt;\"podaj \"&lt;&lt;n&lt;&lt;\" cyfr liczby (od lewej):\"&lt;&lt;endl;\r\n for (int i=0;i<n;i++)\r\n {\r\n  cout&lt;&lt;\"A[\"&lt;&lt;i&lt;&lt;\"] = \";\r\n  cin&gt;&gt;A[i];\r\n }\r\n cout&lt;&lt;\"iteracyjnie: wynik = \"&lt;&lt;oblicz(A,n-1)&lt;&lt;\"(10)\"&lt;&lt;endl;\r\n//system(\"pause\");\r\n return 0;\r\n}</pre>', '2017-12-21'),
(20, 1, 20, '<pre>#include <iostream>\r\nusing namespace std;\r\n\r\nbool sprawdz (int n)\r\n{\r\n for (int i=2;i<n;i++)\r\n  if (n%i==0) return false;\r\n return true;\r\n}\r\n\r\nmain()\r\n{\r\n int n;\r\n cout&lt;&lt;\"podaj liczbe naturalna wieksza od 1: \";\r\n cin&gt;&gt;n;\r\n if (sprawdz(n)) cout&lt;&lt;n&lt;&lt;\" jest liczba pierwsza\"&lt;&lt;endl;\r\n else cout&lt;&lt;n&lt;&lt;\" jest liczba zlozona\"&lt;&lt;endl;\r\n//system(\"pause\");\r\n return 0;     \r\n}</pre>', '2017-12-21'),
(21, 1, 21, '<pre>#include <iostream>\r\nusing namespace std;\r\nconst int MAX=10000;\r\n\r\nvoid generuj (int T[], int n)\r\n{\r\n int i, m;\r\n for (i=2;i<=n;i++) T[i]=1;\r\n i=2;\r\n while (i<=n)\r\n {\r\n  m=2*i;\r\n  while (m<=n)\r\n  {\r\n   T[m]=0;\r\n   m+=i;\r\n  }\r\n  do i++; while (T[i]==0 && i<=n);\r\n }\r\n}\r\n\r\nmain()\r\n{\r\n int n, T[MAX];\r\n cout&lt;&lt;\"podaj liczbe naturalna: \";\r\n cin&gt;&gt;n;\r\n generuj(T,n);\r\n for (int i=2;i<=n;i++)\r\n  if (T[i]==1) cout&lt;&lt;i&lt;&lt;\"\\t\";\r\n cout&lt;&lt;endl;\r\n//system(\"pause\");\r\n return 0;     \r\n}</pre>', '2017-12-20'),
(22, 1, 22, '<pre>#include <iostream>\r\nusing namespace std;\r\nconst int MAX = 100;\r\n\r\nbool szukaj (int T[], int n, int szukana)\r\n{\r\n int i=0;\r\n while (i<n && T[i]!=szukana) i++;\r\n if (i==n) return false; \r\n return true;\r\n}\r\n\r\nmain()\r\n{\r\n int T[MAX], n, szukana;       \r\n cout&lt;&lt;\"podaj liczbe elementow tablicy: \";\r\n cin&gt;&gt;n;\r\n cout&lt;&lt;\"podaj elementy tablicy:\"&lt;&lt;endl;\r\n for (int i=0;i<n;i++)\r\n {\r\n  cout&lt;&lt;\"T[\"&lt;&lt;i&lt;&lt;\"] = \";\r\n  cin&gt;&gt;T[i];  \r\n }\r\n cout&lt;&lt;\"podaj szukany element: \";\r\n cin&gt;&gt;szukana;\r\n if (szukaj(T,n,szukana)) cout&lt;&lt;\"TAK\"&lt;&lt;endl;\r\n else cout&lt;&lt;\"NIE\"&lt;&lt;endl;\r\n//system(\"pause\");\r\n return 0;\r\n}</pre>', '2017-12-20'),
(23, 1, 23, '<pre>#include <iostream>\r\nusing namespace std;\r\nconst int MAX = 100;\r\n\r\nbool szukaj (int T[], int n)\r\n{\r\n for (int i=0;i<n;i++)\r\n  if (T[i]%7==0) return true; \r\n return false;\r\n}\r\n\r\nmain()\r\n{\r\n int T[MAX], n;       \r\n cout&lt;&lt;\"podaj liczbe elementow tablicy: \";\r\n cin&gt;&gt;n;\r\n cout&lt;&lt;\"podaj elementy tablicy:\"&lt;&lt;endl;\r\n for (int i=0;i<n;i++)\r\n {\r\n  cout&lt;&lt;\"T[\"&lt;&lt;i&lt;&lt;\"] = \";\r\n  cin&gt;&gt;T[i];  \r\n }\r\n if (szukaj(T,n)) cout&lt;&lt;\"TAK\"&lt;&lt;endl;\r\n else cout&lt;&lt;\"NIE\"&lt;&lt;endl;\r\n//system(\"pause\");\r\n return 0;\r\n}</pre>', '2017-12-21'),
(24, 1, 24, '<pre>#include <iostream>\r\nusing namespace std;\r\nconst int MAX = 100;\r\n\r\nbool szukaj (double T[], int n)\r\n{\r\n for (int i=0;i<n;i++)\r\n  if (T[i]<=5) return false; \r\n return true;\r\n}\r\n\r\nmain()\r\n{\r\n double T[MAX];\r\n int n;       \r\n cout&lt;&lt;\"podaj liczbe elementow tablicy: \";\r\n cin&gt;&gt;n;\r\n cout&lt;&lt;\"podaj elementy tablicy:\"&lt;&lt;endl;\r\n for (int i=0;i<n;i++)\r\n {\r\n  cout&lt;&lt;\"T[\"&lt;&lt;i&lt;&lt;\"] = \";\r\n  cin&gt;&gt;T[i];  \r\n }\r\n if (szukaj(T,n)) cout&lt;&lt;\"TAK\"&lt;&lt;endl;\r\n else cout&lt;&lt;\"NIE\"&lt;&lt;endl;\r\n//system(\"pause\");\r\n return 0;\r\n}</pre>', '2017-12-21'),
(25, 1, 25, '<pre>#include <iostream>\r\nusing namespace std;\r\nconst int MAX = 100;\r\n\r\nbool szukaj (double T[], int n, double szukana)\r\n{\r\n T[n]=szukana;\r\n int i=0;\r\n while (T[i]!=szukana) i++;\r\n if (i<n) return true; \r\n return false;\r\n}\r\n\r\nmain()\r\n{\r\n double T[MAX], szukana;       \r\n int n;\r\n cout&lt;&lt;\"podaj liczbe elementow tablicy: \";\r\n cin&gt;&gt;n;\r\n cout&lt;&lt;\"podaj elementy tablicy:\"&lt;&lt;endl;\r\n for (int i=0;i<n;i++)\r\n {\r\n  cout&lt;&lt;\"T[\"&lt;&lt;i&lt;&lt;\"] = \";\r\n  cin&gt;&gt;T[i];  \r\n }\r\n cout&lt;&lt;\"podaj szukany element: \";\r\n cin&gt;&gt;szukana;\r\n if (szukaj(T,n,szukana)) cout&lt;&lt;\"TAK\"&lt;&lt;endl;\r\n else cout&lt;&lt;\"NIE\"&lt;&lt;endl;\r\n//system(\"pause\");\r\n return 0;\r\n}</pre>', '2017-12-21'),
(26, 1, 26, '<pre>#include <iostream>\r\nusing namespace std;\r\n\r\ndouble oblicz (int n)\r\n{\r\n double k, minimum;\r\n cout&lt;&lt;\"podaj liczbe: \";\r\n cin&gt;&gt;k;\r\n minimum=k;\r\n while (n>1)\r\n {\r\n  cout&lt;&lt;\"podaj liczbe: \";\r\n  cin&gt;&gt;k;\r\n  if (k<minimum) minimum=k;\r\n  n--;\r\n }\r\n return minimum;\r\n}\r\n\r\nmain()\r\n{\r\n int n;       \r\n cout&lt;&lt;\"podaj liczbe elementow: \";\r\n cin&gt;&gt;n;\r\n cout&lt;&lt;oblicz(n)&lt;&lt;endl;\r\n//system(\"pause\");\r\n return 0;\r\n} </pre>', '2017-12-19'),
(27, 1, 27, '<pre>#include <iostream>\r\nusing namespace std;\r\nconst int MAX = 100;\r\n\r\nvoid dane (int &n)\r\n{\r\n cout&lt;&lt;\"podaj liczbe elementow tablicy: \";\r\n cin&gt;&gt;n;\r\n}  \r\n\r\nvoid wczytaj (double T[], int n)\r\n{\r\n cout&lt;&lt;\"podaj elementy tablicy:\"&lt;&lt;endl;\r\n for (int i=0;i<n;i++)\r\n {\r\n  cout&lt;&lt;\"T[\"&lt;&lt;i&lt;&lt;\"] = \";\r\n  cin&gt;&gt;T[i];\r\n }\r\n}\r\n\r\nvoid wyswietl (double T[], int n)\r\n{\r\n cout&lt;&lt;\"wczytana tablica:\"&lt;&lt;endl;\r\n for (int i=0;i<n;i++) cout&lt;&lt;T[i]&lt;&lt;\"\\t\";\r\n cout&lt;&lt;endl;\r\n}\r\n\r\nvoid sortuj (double T[], int n)\r\n{\r\n int k;\r\n double pom;\r\n for (int i=0;i<n-1;i++)\r\n {\r\n  k=i;\r\n  for (int j=i+1;j<n;j++)\r\n   if (T[j]<T[k]) k=j;\r\n  pom=T[k];\r\n  T[k]=T[i];\r\n  T[i]=pom;\r\n }\r\n}\r\n\r\nmain()\r\n{\r\n double T[MAX];\r\n int n;\r\n dane(n);\r\n wczytaj(T,n);\r\n wyswietl(T,n);\r\n sortuj(T,n);\r\n wyswietl(T,n);\r\n//system(\"pause\");\r\n return 0;\r\n}</pre>', '2017-12-21'),
(28, 1, 28, '<pre>#include <iostream>\r\nusing namespace std;\r\nconst int MAX = 100;\r\n\r\nvoid szukaj (double T[], int n)\r\n{\r\n double lider=T[0];\r\n int pom=1, ilosc=0;\r\n for (int i=1;i<n;i++)\r\n  if (pom==0) \r\n  {\r\n   lider=T[i];\r\n   pom=1;                \r\n  }    \r\n  else if (T[i]==lider) pom++;\r\n       else pom--;\r\n if (pom==0) cout&lt;&lt;\"w zbiorze nie ma lidera\"&lt;&lt;endl;\r\n else\r\n {\r\n  for (int i=0;i<n;i++)\r\n   if (T[i]==lider) ilosc++;\r\n  if (ilosc>n/2) cout&lt;&lt;\"liczba \"&lt;&lt;lider&lt;&lt;\" jest liderem\"&lt;&lt;endl;\r\n  else cout&lt;&lt;\"w zbiorze nie ma lidera\"&lt;&lt;endl;\r\n }    \r\n}\r\n\r\nmain()\r\n{\r\n double T[MAX];\r\n int n;      \r\n cout&lt;&lt;\"podaj liczbe elementow: \";\r\n cin&gt;&gt;n;\r\n cout&lt;&lt;\"podaj elementy zbioru:\"&lt;&lt;endl;\r\n for (int i=0;i<n;i++)\r\n {\r\n  cout&lt;&lt;\"T[\"&lt;&lt;i&lt;&lt;\"] = \";\r\n  cin&gt;&gt;T[i];  \r\n }\r\n szukaj(T,n);\r\n//system(\"pause\");\r\n return 0;\r\n}</pre>', '2017-12-21'),
(29, 1, 29, '<pre>#include <iostream>\r\nusing namespace std;\r\nconst int MAX = 100;\r\n\r\nbool rosnacy (int T[], int n)\r\n{\r\n for (int i=0;i<n-1;i++)\r\n  if (T[i]>=T[i+1]) return false;\r\n return true;  \r\n}\r\n\r\nmain()\r\n{\r\n int T[MAX], n;       \r\n cout&lt;&lt;\"podaj liczbe elementow tablicy: \";\r\n cin&gt;&gt;n;\r\n cout&lt;&lt;\"podaj elementy tablicy:\"&lt;&lt;endl;\r\n for (int i=0;i<n;i++)\r\n {\r\n  cout&lt;&lt;\"T[\"&lt;&lt;i&lt;&lt;\"] = \";\r\n  cin&gt;&gt;T[i];  \r\n }\r\n if (rosnacy(T,n)) cout&lt;&lt;\"ciag jest rosnacy\"&lt;&lt;endl;\r\n else cout&lt;&lt;\"ciag nie jest rosnacy\"&lt;&lt;endl;\r\n//system(\"pause\");\r\n return 0;\r\n}      \r\n</pre>', '2017-12-21'),
(30, 1, 30, '<pre>#include <iostream>\r\nusing namespace std;\r\nconst int MAX = 100;\r\n\r\nvoid dane (int &n)\r\n{\r\n cout&lt;&lt;\"podaj liczbe elementow tablicy: \";\r\n cin&gt;&gt;n;\r\n}\r\n\r\nvoid wczytaj (double T[], int n)\r\n{\r\n cout&lt;&lt;\"podaj elementy tablicy:\"&lt;&lt;endl;\r\n for (int i=0;i<n;i++)\r\n {\r\n  cout&lt;&lt;\"T[\"&lt;&lt;i&lt;&lt;\"] = \";\r\n  cin&gt;&gt;T[i];\r\n }\r\n}\r\n\r\nvoid wyswietl (double T[], int n)\r\n{\r\n cout&lt;&lt;\"wczytana tablica:\"&lt;&lt;endl;\r\n for (int i=0;i<n;i++) cout&lt;&lt;T[i]&lt;&lt;\"\\t\";\r\n cout&lt;&lt;endl;\r\n}\r\n\r\nvoid sortuj (double T[], int n)\r\n{\r\n double pom;    \r\n for (int j=n-1;j>0;j--)					\r\n  for (int i=0; i<j; i++)					 \r\n   if (T[i]>T[i+1])\r\n   {\r\n    pom=T[i];               \r\n    T[i]=T[i+1];		\r\n    T[i+1]=pom;			      \r\n   }    \r\n}\r\n\r\nmain()\r\n{\r\n double T[MAX];\r\n int n;\r\n dane(n);\r\n wczytaj(T,n);\r\n wyswietl(T,n);\r\n sortuj(T,n);\r\n wyswietl(T,n);\r\n//system(\"pause\");\r\n return 0;\r\n}</pre>', '2017-12-21'),
(31, 1, 31, '<pre>\r\n#include <iostream>\r\nusing namespace std;\r\nconst int MAX = 100;\r\n\r\nvoid dane (int &n)\r\n{\r\n cout&lt;&lt;\"podaj liczbe elementow tablicy: \";\r\n cin&gt;&gt;n;\r\n}  \r\n\r\nvoid wczytaj (double T[], int n)\r\n{\r\n cout&lt;&lt;\"podaj elementy tablicy:\"&lt;&lt;endl;\r\n for (int i=0;i<n;i++)\r\n {\r\n  cout&lt;&lt;\"T[\"&lt;&lt;i&lt;&lt;\"] = \";\r\n  cin&gt;&gt;T[i];\r\n }\r\n}\r\n\r\nvoid wyswietl (double T[], int n)\r\n{\r\n cout&lt;&lt;\"wczytana tablica:\"&lt;&lt;endl;\r\n for (int i=0;i<n;i++) cout&lt;&lt;T[i]&lt;&lt;\"\\t\";\r\n cout&lt;&lt;endl;\r\n}\r\n\r\nvoid sortuj (double T[], int n)\r\n{\r\n int k;\r\n double pom;\r\n for (int i=0;i<n-1;i++)\r\n {\r\n  k=i;\r\n  for (int j=i+1;j<n;j++)\r\n   if (T[j]<T[k]) k=j;\r\n  pom=T[k];\r\n  T[k]=T[i];\r\n  T[i]=pom;\r\n }\r\n}\r\n\r\nmain()\r\n{\r\n double T[MAX];\r\n int n;\r\n dane(n);\r\n wczytaj(T,n);\r\n wyswietl(T,n);\r\n sortuj(T,n);\r\n wyswietl(T,n);\r\n//system(\"pause\");\r\n return 0;\r\n}\r\n</pre>', '2017-12-21'),
(32, 1, 32, '<pre>#include <iostream>\r\nusing namespace std;\r\nconst int MAX = 100;\r\n\r\nvoid dane (int &n, char* komunikat)\r\n{\r\n cout&lt;&lt;\"podaj \"&lt;&lt;komunikat&lt;&lt;\": \";\r\n cin&gt;&gt;n;\r\n}\r\n\r\nvoid wczytaj (int T[], int n)\r\n{\r\n cout&lt;&lt;\"podaj elementy tablicy:\"&lt;&lt;endl;\r\n for (int i=0;i<n;i++)\r\n {\r\n  cout&lt;&lt;\"T[\"&lt;&lt;i&lt;&lt;\"] = \";\r\n  cin&gt;&gt;T[i];\r\n }\r\n}\r\n\r\nvoid wyswietl (int T[], int n)\r\n{\r\n cout&lt;&lt;\"wczytana tablica:\"&lt;&lt;endl;\r\n for (int i=0;i<n;i++) cout&lt;&lt;T[i]&lt;&lt;\"\\t\";\r\n cout&lt;&lt;endl;\r\n}\r\n\r\nvoid sortuj (int T[], int n, int m)\r\n{\r\n int P[MAX]={0};\r\n for (int i=0;i<n;i++) P[T[i]]++;\r\n int k=0;\r\n for (int i=0;i<m;i++)\r\n  for (int j=P[i];j>=1;j--)\r\n  {\r\n   T[k]=i;\r\n   k++;\r\n  }\r\n}\r\n\r\nmain()\r\n{\r\n int T[MAX], n, m;\r\n dane(n,\"liczbe elementow\");\r\n dane(m,\"wartosc, od ktorej wszystkie elementy sa mniejsze\");\r\n wczytaj(T,n);\r\n wyswietl(T,n);\r\n sortuj(T,n,m);\r\n wyswietl(T,n);\r\n//system(\"pause\");\r\n return 0;\r\n}</pre>', '2017-12-21'),
(33, 1, 33, '<pre>\r\n#include <iostream>\r\nusing namespace std;\r\nconst int MAX = 100;\r\n\r\nvoid dane (int &n)\r\n{\r\n cout&lt;&lt;\"podaj liczbe elementow tablicy: \";\r\n cin&gt;&gt;n;\r\n}\r\n\r\nvoid wczytaj (double T[], int n)\r\n{\r\n cout&lt;&lt;\"podaj elementy tablicy:\"&lt;&lt;endl;\r\n for (int i=0;i<n;i++)\r\n {\r\n  cout&lt;&lt;\"T[\"&lt;&lt;i&lt;&lt;\"] = \";\r\n  cin&gt;&gt;T[i];\r\n }\r\n}\r\n\r\nvoid wyswietl (double T[], int n)\r\n{\r\n cout&lt;&lt;\"wczytana tablica:\"&lt;&lt;endl;\r\n for (int i=0;i<n;i++) cout&lt;&lt;T[i]&lt;&lt;\"\\t\";\r\n cout&lt;&lt;endl;\r\n}\r\n\r\nvoid oblicz (double T[], int n, double &minimum, double &maksimum)\r\n{\r\n int dl, i;   \r\n if (n%2) dl=n-2; else dl=n-1;\r\n if (T[0]<=T[1])\r\n {\r\n  minimum=T[0]; \r\n  maksimum=T[1]; \r\n }\r\n else\r\n {\r\n  minimum=T[1];\r\n  maksimum=T[0];\r\n }\r\n i=2;\r\n while (i<dl)\r\n {\r\n  if (T[i]<=T[i+1])\r\n  {\r\n   if (T[i]<minimum) minimum=T[i];\r\n   if (T[i+1]>maksimum) maksimum=T[i+1];\r\n  }\r\n  else\r\n  {\r\n   if (T[i+1]<minimum) minimum=T[i+1];\r\n   if (T[i]>maksimum) maksimum=T[i];\r\n  }\r\n  i+=2;\r\n }\r\n if (n%2)\r\n {\r\n  if (T[n-1]<minimum) minimum=T[n-1];\r\n  if (T[n-1]>maksimum) maksimum=T[n-1];\r\n }\r\n}\r\n\r\nmain()\r\n{\r\n double T[MAX], minimum, maksimum;\r\n int n;\r\n dane(n);\r\n wczytaj(T,n);\r\n wyswietl(T,n);\r\n oblicz(T,n,minimum,maksimum);\r\n cout&lt;&lt;\"minimum = \"&lt;&lt;minimum&lt;&lt;endl;\r\n cout&lt;&lt;\"maksimum = \"&lt;&lt;maksimum&lt;&lt;endl;\r\n//system(\"pause\");\r\n return 0;\r\n}\r\n</pre>', '0000-00-00'),
(34, 1, 34, '<pre>#include <iostream>\r\nusing namespace std;\r\nconst int MAX = 100;\r\n\r\nvoid dane (int &n)\r\n{\r\n cout&lt;&lt;\"podaj liczbe elementow tablicy: \";\r\n cin&gt;&gt;n;\r\n}\r\n\r\nvoid wczytaj (double T[], int n)\r\n{\r\n cout&lt;&lt;\"podaj elementy tablicy:\"&lt;&lt;endl;\r\n for (int i=0;i<n;i++)\r\n {\r\n  cout&lt;&lt;\"T[\"&lt;&lt;i&lt;&lt;\"] = \";\r\n  cin&gt;&gt;T[i];\r\n }\r\n}\r\n\r\nvoid wyswietl (double T[], int n)\r\n{\r\n cout&lt;&lt;\"wczytana tablica:\"&lt;&lt;endl;\r\n for (int i=0;i<n;i++) cout&lt;&lt;T[i]&lt;&lt;\"\\t\";\r\n cout&lt;&lt;endl;\r\n}\r\n\r\nvoid scalaj (double T[], int lewy, int prawy)\r\n{\r\n int i, i_lewy, i_prawy, srodek;\r\n double pom[MAX];      \r\n for (i=0;i<MAX;i++) pom[i]=T[i];\r\n srodek=(lewy+prawy)/2;\r\n i=lewy;\r\n i_lewy=lewy;\r\n i_prawy=srodek+1;\r\n while (i_lewy<=srodek && i_prawy<=prawy)\r\n {\r\n  if (pom[i_lewy]<pom[i_prawy])\r\n  {\r\n   T[i]=pom[i_lewy];\r\n   i_lewy++;\r\n  }\r\n  else\r\n  {\r\n   T[i]=pom[i_prawy];\r\n   i_prawy++;\r\n  }\r\n  i++;\r\n }\r\n if (i_lewy>srodek)\r\n  while (i_prawy<=prawy)\r\n  {\r\n   T[i]=pom[i_prawy];\r\n   i_prawy++;\r\n   i++;\r\n  }\r\n else\r\n  while (i_lewy<=srodek)\r\n  {\r\n   T[i]=pom[i_lewy];\r\n   i_lewy++;\r\n   i++;\r\n  }\r\n}\r\n\r\nvoid sortuj (double T[], int lewy, int prawy)\r\n{\r\n int srodek=(lewy+prawy)/2;\r\n if (lewy<srodek) sortuj(T,lewy,srodek);\r\n if (srodek+1<prawy) sortuj(T,srodek+1,prawy);\r\n scalaj(T,lewy,prawy);\r\n}\r\n\r\nmain()\r\n{\r\n double T[MAX];\r\n int n;\r\n dane(n);\r\n wczytaj(T,n);\r\n wyswietl(T,n);\r\n sortuj(T,0,n-1);\r\n wyswietl(T,n);\r\n//system(\"pause\");\r\n return 0;\r\n}\r\n</pre>', '2017-12-21'),
(35, 1, 35, '<pre>#include <iostream>\r\nusing namespace std;\r\nconst int MAX = 100;\r\n\r\nvoid dane (int &n)\r\n{\r\n cout&lt;&lt;\"podaj liczbe elementow tablicy: \";\r\n cin&gt;&gt;n;\r\n}\r\n\r\nvoid wczytaj (double T[], int n)\r\n{\r\n cout&lt;&lt;\"podaj elementy tablicy:\"&lt;&lt;endl;\r\n for (int i=0;i<n;i++)\r\n {\r\n  cout&lt;&lt;\"T[\"&lt;&lt;i&lt;&lt;\"] = \";\r\n  cin&gt;&gt;T[i];\r\n }\r\n}\r\n\r\nvoid wyswietl (double T[], int n)\r\n{\r\n cout&lt;&lt;\"wczytana tablica:\"&lt;&lt;endl;\r\n for (int i=0;i<n;i++) cout&lt;&lt;T[i]&lt;&lt;\"\\t\";\r\n cout&lt;&lt;endl;\r\n}\r\n\r\nvoid sortuj (double T[], int lewy, int prawy)\r\n{\r\n int i=lewy, j=prawy;\r\n double srodek=T[(lewy+prawy)/2], pom;\r\n do\r\n {\r\n  while (T[i]<srodek) i++;\r\n  while (T[j]>srodek) j--;\r\n  if (i<=j)\r\n  {\r\n   pom=T[i];\r\n   T[i]=T[j];\r\n   T[j]=pom;\r\n   i++;\r\n   j--;\r\n  }\r\n }\r\n while (i<=j);\r\n if (lewy<j) sortuj(T,lewy,j);\r\n if (prawy>i) sortuj(T,i,prawy);\r\n}\r\n\r\nmain()\r\n{\r\n double T[MAX];\r\n int n;\r\n dane(n);\r\n wczytaj(T,n);\r\n wyswietl(T,n);\r\n sortuj(T,0,n-1);\r\n wyswietl(T,n);\r\n//system(\"pause\");\r\n return 0;\r\n}\r\n</pre>', '2017-12-21'),
(36, 1, 36, '<pre>#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\ndouble F (double x)\r\n{\r\n return pow(x,2)-x-3;\r\n}\r\n\r\ndouble oblicz (double p, double q, int n)\r\n{\r\n double dl=(q-p)/n, s=0;\r\n for (int i=0;i<n;i++) s+=abs(F(p+dl*i+dl/2));\r\n return dl*s;\r\n}\r\n\r\nmain()\r\n{\r\n double p, q;\r\n int n;\r\n cout&lt;&lt;\"podaj przedzial [p, q]: \";\r\n cin&gt;&gt;p&gt;&gt;q;\r\n cout&lt;&lt;\"podaj liczbe prostokatow n: \";\r\n cin&gt;&gt;n;\r\n cout&lt;&lt;\"pole = \"&lt;&lt;oblicz(p,q,n)&lt;&lt;endl;\r\n//system(\"pause\");\r\n return 0;\r\n}</pre>', '2017-12-21'),
(37, 1, 37, '<pre>#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\ndouble F (double x)\r\n{\r\n return -pow(x,3)-pow(x,2)+1;\r\n}\r\n\r\ndouble oblicz (double p, double q, int n)\r\n{\r\n double dl=(q-p)/n, s=0;\r\n for (int i=1;i<n;i++) s+=abs(F(p+i*dl));\r\n return dl/2*(abs(F(p))+abs(F(q))+2*s);\r\n}\r\n\r\nmain()\r\n{\r\n double p, q;\r\n int n;\r\n cout&lt;&lt;\"podaj przedzial [p, q]: \";\r\n cin&gt;&gt;p&gt;&gt;q;\r\n cout&lt;&lt;\"podaj liczbe prostokatow n: \";\r\n cin&gt;&gt;n;\r\n cout&lt;&lt;\"pole = \"&lt;&lt;oblicz(p,q,n)&lt;&lt;endl;\r\n//system(\"pause\");\r\n return 0;\r\n}\r\n</pre>', '2017-12-21'),
(38, 1, 38, '<pre>#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\ndouble F (double x)\r\n{\r\n return pow(x,2)-x-3;\r\n}\r\n\r\ndouble oblicz (double p, double q, double E1)\r\n{\r\n double s=(p+q)/2;\r\n while (F(p)!=0 && F(q)!=0 && q-p>=E1)\r\n {\r\n  s=(p+q)/2;\r\n  if (F(p)*F(s)>0) p=s; else q=s;\r\n }\r\n if (F(p)==0) return p;\r\n if (F(q)==0) return q;\r\n return s;\r\n}\r\n\r\nmain()\r\n{\r\n double p, q, E1;\r\n cout&lt;&lt;\"podaj przedzial [p, q]: \";\r\n cin&gt;&gt;p&gt;&gt;q;\r\n cout&lt;&lt;\"podaj dokladnosc E1: \";\r\n cin&gt;&gt;E1;\r\n cout&lt;&lt;\"miejsce zerowe = \"&lt;&lt;oblicz(p,q,E1)&lt;&lt;endl;\r\n//system(\"pause\");\r\n return 0;\r\n}</pre>', '2017-12-21'),
(39, 1, 39, '<pre>#include <iostream>\r\nusing namespace std;\r\nconst int MAX = 50;\r\n\r\nvoid wczytaj (int W[], int C[], int n)\r\n{\r\n cout&lt;&lt;\"Podaj wartosci i wagi przedmiotow:\"&lt;&lt;endl;\r\n for (int i=1;i<=n;i++)\r\n {\r\n  cout&lt;&lt;i&lt;&lt;\".   wartosc=\";\r\n  cin&gt;&gt;W[i];\r\n  cout&lt;&lt;\"     waga=\";\r\n  cin&gt;&gt;C[i];\r\n }\r\n}\r\n\r\nint pakujPlecak (int W[], int C[], int n, int waga, int K[])\r\n{\r\n int wynik=0;\r\n for (int i=1;i<=n;i++)\r\n {\r\n  K[i]=waga/C[i];\r\n  waga-=K[i]*C[i];\r\n  wynik+=W[i]*K[i];\r\n }\r\n return wynik;\r\n}\r\n\r\nmain()\r\n{\r\n int W[MAX], C[MAX], K[MAX], waga, n;\r\n cout&lt;&lt;\"podaj maksymalna wage plecaka: \";\r\n cin&gt;&gt;waga;\r\n cout&lt;&lt;\"podaj liczbe przedmiotow: \";\r\n cin&gt;&gt;n;\r\n wczytaj(W,C,n);\r\n cout&lt;&lt;\"wartosc plecaka = \"&lt;&lt;pakujPlecak(W,C,n,waga,K)&lt;&lt;endl;\r\n cout&lt;&lt;\"zapakowane przedmioty:\"&lt;&lt;endl;\r\n for (int i=1;i<=n;i++) cout&lt;&lt;i&lt;&lt;\":  ilosc=\"&lt;&lt;K[i]&lt;&lt;\"  wartosc=\"&lt;&lt;W[i]&lt;&lt;\"  waga=\"&lt;&lt;C[i]&lt;&lt;endl;\r\n//system(\"pause\");\r\n return 0;\r\n}\r\n</pre>', '2017-12-21'),
(40, 1, 40, '<pre>#include <iostream>\r\nusing namespace std;\r\nconst int MAX = 50;\r\n\r\nvoid wczytaj (int W[], int C[], int n)\r\n{\r\n cout<<\"Podaj wartosci i wagi przedmiotow:\"<<endl;\r\n for (int i=1;i<=n;i++)\r\n {\r\n  cout<<i<<\".   wartosc=\";\r\n  cin>>W[i];\r\n  cout<<\"     waga=\";\r\n  cin>>C[i];\r\n }\r\n}\r\n\r\nvoid wyswietl (int T[][MAX], int m, int n, char* komunikat)\r\n{\r\n cout<<komunikat<<\":\"<<endl;\r\n for (int i=1;i<=m;i++)\r\n {\r\n  for (int j=1;j<=n;j++) cout<<\"\\t\"<<T[i][j];\r\n  cout<<endl;\r\n }\r\n//system(\"pause\");\r\n}\r\n\r\nvoid pakujPlecak (int W[], int C[], int n, int waga, int Wartosci[][MAX], int Numery[][MAX])\r\n{\r\n for (int i=1;i<=waga;i++)\r\n {\r\n  Wartosci[0][i]=0;\r\n  Numery[0][i]=0;\r\n }\r\n for (int i=1;i<=n;i++)\r\n {\r\n  Wartosci[i][0]=0;\r\n  Numery[i][0]=0;\r\n }\r\n for (int i=1;i<=n;i++)\r\n  for (int j=1;j<=waga;j++)\r\n   if (j>=C[i]&&Wartosci[i-1][j]<Wartosci[i][j-C[i]]+W[i])\r\n   {\r\n    Wartosci[i][j]=Wartosci[i][j-C[i]]+W[i];\r\n    Numery[i][j]=i;\r\n   }\r\n   else \r\n   {\r\n    Wartosci[i][j]=Wartosci[i-1][j];\r\n    Numery[i][j]=Numery[i-1][j];\r\n   }\r\n}\r\n\r\nint odczytajPlecak (int W[], int C[], int n, int waga, int Wartosci[][MAX], int Numery[][MAX], int K[])\r\n{\r\n int wynik=Wartosci[n][waga];\r\n for (int i=1;i<=n;i++) K[i]=0;\r\n while (Numery[n][waga]>0)\r\n {\r\n  K[Numery[n][waga]]+=1;\r\n  waga-=C[Numery[n][waga]];\r\n }\r\n return wynik;\r\n}\r\n\r\nmain()\r\n{\r\n int W[MAX], C[MAX], K[MAX], Wartosci[MAX][MAX], Numery[MAX][MAX], waga, n;\r\n cout<<\"podaj maksymalna wage plecaka: \";\r\n cin>>waga;\r\n cout<<\"podaj liczbe przedmiotow: \";\r\n cin>>n;\r\n wczytaj(W,C,n);\r\n pakujPlecak(W,C,n,waga,Wartosci,Numery);\r\n wyswietl(Wartosci,n,waga,\"tablica wartosci\");\r\n wyswietl(Numery,n,waga,\"tablica numerow\");\r\n cout<<\"wartosc plecaka = \"<<odczytajPlecak(W,C,n,waga,Wartosci,Numery,K)<<endl;\r\n cout<<\"zapakowane przedmioty:\"<<endl;\r\n for (int i=1;i<=n;i++) cout<<i<<\":  ilosc=\"<<K[i]<<\"  wartosc=\"<<W[i]<<\"  waga=\"<<C[i]<<endl;\r\n//system(\"pause\");\r\n return 0;\r\n}\r\n</pre>', '2017-12-21'),
(41, 1, 41, '<pre>#include <iostream>\r\n#include <cstring>\r\nusing namespace std;\r\n\r\nbool sprawdz (string s)\r\n{\r\n int dl=s.size();\r\n for (int i=0;i<dl/2;i++)\r\n  if (s[i]!=s[dl-i-1]) return false;\r\n return true;\r\n}\r\n\r\nmain()\r\n{\r\n string s;\r\n cout<<\"podaj wyraz: \";\r\n cin>>s;\r\n if (sprawdz(s)) cout<<\"\\nslowo \"<<s<<\" jest palindromem\"<<endl;\r\n else cout<<\"\\nslowo \"<<s<<\" nie jest palindromem\"<<endl;\r\n//system(\"pause\");\r\n return 0;\r\n}</pre>', '2017-12-21'),
(42, 1, 42, '<pre>#include <iostream>\r\n#include <cstring>\r\nusing namespace std;\r\n\r\nstring sortuj (string s)\r\n{\r\n int dl=s.size(), k;\r\n char pom;\r\n for (int i=0;i<dl-1;i++)\r\n {\r\n  k=i;\r\n  for (int j=i+1;j<dl;j++)\r\n   if (s[j]<s[k]) k=j;\r\n  pom=s[k];\r\n  s[k]=s[i];\r\n  s[i]=pom; \r\n }\r\n return s;\r\n}\r\n\r\nmain()\r\n{\r\n string s;\r\n cout<<\"podaj tekst bez spacji:\"<<endl;\r\n cin>>s;\r\n cout<<\"posortowany tekst:\\n\"<<sortuj(s)<<endl;\r\n//system(\"pause\");\r\n return 0;\r\n}</pre>', '2017-12-21'),
(43, 1, 43, '<pre>#include <iostream>\r\n#include <cstring>\r\nusing namespace std;\r\n\r\nbool sprawdz (string s1, string s2)\r\n{\r\n int dl=s1.size();\r\n if (dl!=s2.size()) return false;\r\n else\r\n {\r\n  int T1[2]={0, 0}, T2[2]={0, 0}; \r\n  for (int i=0;i<dl;i++)\r\n  {\r\n   if (s1[i]==\'X\') T1[0]++;\r\n   else T1[1]++;\r\n   if (s2[i]==\'X\') T2[0]++;\r\n   else T2[1]++;\r\n  }\r\n  for (int i=0;i<2;i++)\r\n   if (T1[i]!=T2[i]) return false;\r\n }\r\n return true;\r\n}\r\n\r\nmain()\r\n{\r\n string s1, s2;\r\n cout<<\"podaj pierwszy wyraz: \";\r\n cin>>s1;\r\n cout<<\"podaj drugi wyraz: \";\r\n cin>>s2;\r\n if (sprawdz(s1,s2)) cout<<\"\\nslowa sa anagramami\"<<endl;\r\n else cout<<\"\\nslowa nie sa anagramami\"<<endl;\r\n//system(\"pause\");\r\n return 0;\r\n}</pre>', '2017-12-21'),
(44, 1, 44, '<pre>#include <iostream>\r\n#include <cstring>\r\nusing namespace std;\r\n\r\nbool szukaj (string s, string wzorzec, int T[], int &n)\r\n{\r\n int dlT=s.size(), dlW=wzorzec.size(), j;\r\n if (dlW>dlT) return false;\r\n n=0;\r\n for (int i=0;i<dlT-dlW+1;i++)\r\n {\r\n  for (j=i;j<i+dlW;j++)\r\n   if (s[j]!=wzorzec[j-i]) break;\r\n  if (j==i+dlW)\r\n  {\r\n   T[n]=i;\r\n   n++;\r\n  }\r\n }\r\n if (n==0) return false;\r\n return true;\r\n}\r\n\r\nmain()\r\n{\r\n string s, wzorzec;\r\n int n, T[256]={0};\r\n cout<<\"podaj przeszukiwany tekst: \";\r\n cin>>s;\r\n cout<<\"podaj wzorzec: \";\r\n cin>>wzorzec;\r\n if (szukaj(s,wzorzec,T,n))\r\n { \r\n  cout<<\"liczba wystapien wzorca: \"<<n<<endl;\r\n  cout<<\"pozycje wystapienia wzorca:\"<<endl;\r\n  for (int i=0;i<n;i++) cout<<T[i]<<\"\\t\";\r\n  cout<<endl;\r\n }\r\n else cout<<\"\\nwzorzec nie wystepuje w tekscie\"<<endl;\r\n//system(\"pause\");\r\n return 0;\r\n}</pre>', '2017-12-21'),
(45, 1, 45, '<pre>#include <iostream>\r\n#include <cstring>\r\nusing namespace std;\r\nconst int MAX=100;\r\n\r\nstring szyfruj (string tekst, int klucz[], int n)\r\n{\r\n string wynik;\r\n char tablica[MAX][MAX];\r\n int dl=tekst.size(), m;\r\n if (dl%n) m=dl/n+1;\r\n else m=dl/n;\r\n int k=0;\r\n for (int i=0;i<m;i++)\r\n  for (int j=0;j<n;j++)\r\n   if (k<dl) \r\n   {\r\n    tablica[i][j]=tekst[k];\r\n    k++;\r\n   }\r\n   else tablica[i][j]=\'\\0\';\r\n int l;\r\n for (int k=0;k<n;k++)\r\n {\r\n  l=klucz[k];\r\n  for (int i=0;i<m;i++)\r\n   if (tablica[i][l]!=\'\\0\') wynik+=tablica[i][l];\r\n }\r\n return wynik;\r\n}\r\n\r\nmain()\r\n{\r\n string tekst;\r\n int n, klucz[MAX];\r\n cout<<\"podaj tekst jawny: \";\r\n cin>>tekst;\r\n cout<<\"podaj liczbe kolumn: \";\r\n cin>>n;\r\n cout<<\"kluczem jest permutacja numerow kolumn z zakresu: 0 - \"<<n-1<<endl;\r\n for (int j=0;j<n;j++)\r\n {\r\n  cout<<\"podaj element klucza nr \"<<j+1<<\": \";\r\n  cin>>klucz[j];\r\n }\r\n cout<<\"kryptogram: \"<<szyfruj(tekst,klucz,n)<<endl;\r\n//system(\"pause\");\r\n return 0;\r\n}</pre>', '2017-12-21'),
(46, 1, 46, '<pre>#include <iostream>\r\n#include <cstring>\r\nusing namespace std;\r\n\r\nvoid wyswietl (string s)\r\n{\r\n int dl;\r\n dl=s.size();\r\n for (int i=0;i<3;i++)\r\n {\r\n  for (int j=0;j<dl;j++)\r\n  {\r\n   if (i==0)\r\n    if (!(j%4)) cout<<s[j]; else cout<<\" \";\r\n   else if (i==1)\r\n         if (j%2) cout<<s[j]; else cout<<\" \";\r\n        else \r\n         if (!((j-2)%4)) cout<<s[j]; else cout<<\" \";     		\r\n  }\r\n  cout<<endl;\r\n }    \r\n}\r\n\r\nstring szyfruj (string tekst)\r\n{\r\n string wynik;\r\n int dl=tekst.size();\r\n for (int i=0;i<dl;i+=4) wynik+=tekst[i];\r\n for (int i=1;i<dl;i+=2) wynik+=tekst[i];\r\n for (int i=2;i<dl;i+=4) wynik+=tekst[i];\r\n return wynik;\r\n}\r\n\r\nmain()\r\n{\r\n string tekst;\r\n cout<<\"podaj tekst jawny: \";\r\n cin>>tekst;\r\n wyswietl(tekst);\r\n cout<<\"szyfrogram: \"<<szyfruj(tekst)<<endl;\r\n//system(\"pause\");\r\n return 0;\r\n}</pre>', '2017-12-21'),
(47, 1, 47, '<pre>#include <iostream>\r\n#include <cstring>\r\nusing namespace std;\r\n\r\nstring szyfruj (string tekst, string alfabet, int klucz)\r\n{\r\n string wynik;\r\n int dlT=tekst.size(), dlA=alfabet.size();\r\n for (int i=0;i<dlT;i++)\r\n  for (int j=0;j<dlA;j++)\r\n   if (tekst[i]==alfabet[j]) wynik+=alfabet[(j+klucz)%dlA];\r\n return wynik;\r\n}\r\n\r\nmain()\r\n{\r\n string tekst, alfabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n int klucz;\r\n cout<<\"podaj tekst jawny: \";\r\n cin>>tekst;\r\n//cout<<\"podaj alfabet jawny: \";\r\n//cin>>alfabet;\r\n cout<<\"podaj klucz: \";\r\n cin>>klucz;\r\n cout<<\"szyfrogram: \"<<szyfruj(tekst,alfabet,klucz)<<endl;\r\n//system(\"pause\");\r\n return 0;\r\n}</pre>', '2017-12-21');

-- --------------------------------------------------------

--
-- Struktura tabeli dla tabeli `pytania`
--

CREATE TABLE `pytania` (
  `id_pytania` int(11) NOT NULL,
  `tresc` text NOT NULL,
  `zdjecie` text NOT NULL,
  `dane` text NOT NULL,
  `wynik` text NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Zrzut danych tabeli `pytania`
--

INSERT INTO `pytania` (`id_pytania`, `tresc`, `zdjecie`, `dane`, `wynik`) VALUES
(1, 'Skonstruuj algorytm rozwiązujący równanie liniowe.', '<img alt=\"zdjecie-1.1\" src=\"zadania/1.1.png\">', 'Dane: Dowolne liczby rzeczywiste: a,b.', 'Wynik: Wartość rzeczywista pierwiastka równania liniowego: x lub komunikat informujący o braku rozwiązania bądź o nieskończenie wiele rozwiązań.'),
(2, 'Skonstruuj algorytm wyznaczający sumę n elementowego ciągu geometrycznego.', '<img alt=\"zdjecie-1.2\" src=\"zadania/1.2.png\">', 'Dane: Liczba naturalna: n>0', 'Wynik: Suma n kolejnych liczb naturalnych większych od 0: s.'),
(3, 'Skonstruuj algorytm wyznaczający sume n elementowego ciągu geometrycznego, liczona tylko gdy n>1, w przeciwnym razie wyświetl stosowny komunikat.', '<img alt=\"zdjecie-1.3\" src=\"zadania/1.3.png\">', 'Dane: Liczba całkowita: n.', 'Wynik: Jeśli n jest większe lub równe 1, suma n kolejnych liczb naturalnych 1,2,3...,n, w przeciwnym wypadku komunikat \"n < 1\".'),
(4, 'Skonstruuj algorytm rozwiązujący równanie kwadratowe.', '<img alt=\"zdjecie-1.4\" src=\"zadania/1.4.png\">', 'Dane: Liczba rzeczywista: a != 0', 'Wynik: Pierwiastki rzeczywiste równania kwadratowego lub komunikat informujący o braku rozwiązania.'),
(5, 'Skonstruuj algorytm obliczający iloczyn n kolejnych liczb naturalnych.', '<img alt=\"zdjecie-1.5\" src=\"zadania/1.5.png\">', 'Dane: Liczba naturalna: n > 0 ', 'Wynik: Iloczyn n kolejnych naturalnych 3,4,5,6...: s.'),
(6, 'Skonstruuj algorytm obliczający sumę cyfr podawanych z klawiatury dopóki będą mniejsze od 50.', '<img alt=\"zdjecie-1.6\" src=\"zadania/1.6.png\">', 'Dane: Liczby rzeczywiste nie wieksze od 50.', 'Wynik: Suma wczytanych liczb rzeczywistych: s.'),
(7, 'Skonstruuj algorytm obliczający silnie liczby naturalnej.', '<img alt=\"zdjecie-1.7\" src=\"zadania/1.7.png\">', 'Dane: Liczba naturalna: n >= 0.', 'Wynik: Silnia liczby naturalnej n: n!.'),
(8, 'Skonstruuj algorytm obliczający n-ty wyraz ciągu Fibonacciego.', '<img alt=\"zdjecie-1.8\" src=\"zadania/1.8.png\">', 'Dane: Liczba naturalna: n > 0.', 'Wynik: n-ty wyraz ciągu Fibonacciego.'),
(9, 'Skonstruuj algorytm rozwiązujący zagadkę wieży hanoi.', '<img alt=\"zdjecie-1.9\" src=\"zadania/1.9.png\">', 'Dane: Trzy paliki oznaczone A, B i C\r\nLiczba naturalna: n > 0 (liczba krążków).\r\nn krążków różnej wielkości, które są nałożone na palik A i ułożone kolejno od najwiekszego, znajdującego się na dole do największego, do najmniejszego na górze.', 'Wynik: n krążków różnej wielkości, które są nałożone na palik B i ułożone kolejno od najwiekszego, znajdującego się na dole do największego, do najmniejszego na górze.\r\nPrzeniesienie krążków z palika A na palik B wykonane z uwzględnieniem zasad gry w wieże Hanoi.\r\n'),
(10, 'Skonstruuj algorytm sprawdzający czy dany punkt leży na prostej.', '<img alt=\"zdjecie-2.1\" src=\"zadania/2.1.png\">', 'Dane: Liczby rzeczywiste x, y (współrzędne punktu P).', 'Wynik: Komunikat informujący, czy punkt P = (x,y) leży na prostej.'),
(11, 'Skonstruuj algorytm sprawdzający czy dany punkt należy do odcinka.', '<img alt=\"zdjecie-2.2\" src=\"zadania/2.2.png\">', 'Dane: Liczby rzeczywiste: x1, y1, x2, y2 (współrzędne punktów A i B).', 'Wynik: Komunikat informujący, czy punkt P = (3, -2) należy do odcinka AB.'),
(12, 'Skonstruuj algorytm obliczający NWD.', '<img alt=\"zdjecie-2.3\" src=\"zadania/2.3.png\">', 'Dane: Liczby naturalne: a > 0, b > 0.', 'Wynik: Największy wspólny dzielnik dwóch liczb naturalnych a i b: NWD(a,b).'),
(13, 'Skonstruuj algorytm obliczający NWD z użyciem rekurencji.', '<img alt=\"zdjecie-2.4\" src=\"zadania/2.4.png\">', 'Dane: Liczby naturalne: a > 0, b > 0.', 'Wynik: Największy wspólny dzielnik dwóch liczb naturalnych a i b: NWD(a,b).'),
(14, 'Skonstruuj algorytm obliczający NWD z użyciem operacji odejmowania.', '<img alt=\"zdjecie-2.5\" src=\"zadania/2.5.png\">', 'Dane: Liczby naturalne: a > 0, b > 0.', 'Wynik: Największy wspólny dzielnik dwóch liczb naturalnych a i b: NWD(a,b).'),
(15, 'Skonstruuj algorytm obliczający NWD z użyciem operacji odejmowania oraz rekurencji.', '<img alt=\"zdjecie-2.6\" src=\"zadania/2.6.png\">', 'Dane: Liczby naturalne: a > 0, b > 0.', 'Wynik: Największy wspólny dzielnik dwóch liczb naturalnych a i b: NWD(a,b).'),
(16, 'Skonstruuj algorytm obliczający NWW.', 'Brak zdjęcia', 'Dane: Liczby naturalne: a > 0, b > 0.', 'Wynik: Największa wspólna wielkorotność dwóch liczb naturalnych a i b: NWW(a,b).'),
(17, 'Skonstruuj algorytm wykonujący zamiane liczb z systemu dziesiętnego na binarny.\r\n', '<img alt=\"zdjecie-2.8\" src=\"zadania/2.8.png\">', 'Dane: Liczba całkowita: liczba >= 0 (liczba w systemie dziesiętnym).', 'Wynik: Liczba całkowita: i>0 (liczba cyfr wartości otrzymanej po zamianie z systemu dziesiętnego na dwójkowy)\r\ni - elementowa tablica zawietająca liczby całkowite: w[0...i-1] (liczba zapisana w systemie dwójkowym uzyskana po zamianie z systemu dziesiętnego, której cyfry należy odczytać wypisując tablice od tyłu.'),
(18, 'Skonstruuj algorytm wykonujący obliczanie wielomianu za pomocą schematu Hornera.', '<img alt=\"zdjecie-2.9\" src=\"zadania/2.9.png\">', 'Dane: Liczba całkowita: n >= 0 (stopień wielomianu). \r\nn+1 - elementowa tablica liczb rzeczywistych: a[0...n] (współczynniki wielomianu).\r\nLiczba rzeczywista: x (wartość argumentu).', 'Wynik: Wartość rzeczywista wielumianu stopnia n dla wartości argumentu x.'),
(19, 'Skonstruuj algorytm wykonujący zamiane liczb z systemu dziesiętnego na binarny za pomocą schematu Hornera.', 'Brak zdjęcia', 'Dane: Liczba całkowita: n >= 0 (stopień wielomianu). \r\nn+1 - elementowa tablica liczb rzeczywistych: a[0...n] (współczynniki wielomianu).\r\nLiczba rzeczywista: x (wartość argumentu).', 'Wynik: Wartość rzeczywista wielumianu stopnia n dla wartości argumentu x.'),
(20, 'Skonstruuj algorytm sprawdzający czy liczba jest pierwsza.', '<img alt=\"zdjecie-2.11\" src=\"zadania/2.11.png\">', 'Dane: Liczba naturalna: n > 1.', 'Wynik: Komunikat informujący, czy liczba jest liczbą pierwszą.'),
(21, 'Skonstruuj algorytm działający na zasadzie Sita Eratostenesa.\r\n', 'Brak zdjęcia', 'Dane: Liczba naturalna: n > 1.', 'Wynik: Liczby pierwsze z przedziału [2,n]: tablica jednowymiarowa T[2...n], w której jeśli t[i] = 1, to i jest liczbą pierwszą, a w przeciwnym razie i jest liczbą złożoną'),
(22, 'Skonstruuj algorytm przeszukujący liniowo ciąg liczbowy.', '<img alt=\"zdjecie-2.13\" src=\"zadania/2.13.png\">', 'Dane: Liczba naturalna: n > 0.\r\nLiczba całkowita: szukana (wartość elementu szukanego w tablicy T).\r\nn-elementowa tablica jednowymiarowa zawierająca liczby całkowite: t[0...n-1].', 'Wynik: Komunikat informujący, czy szukana liczba znajduje się w tablicy T.'),
(23, 'Skonstruuj algorytm przeszukujący liniowo ciąg liczbowy w poszukiwaniu podzielników liczby 7.', '<img alt=\"zdjecie-2.14\" src=\"zadania/2.14.png\">', 'Dane: Liczba naturalna: n > 0 (liczba elementów tablicy T).\r\nn-elementowa tablica jednowymiarowa zawierająca liczby całkowite: t[0...n-1].', 'Wynik: Komunikat informujący czy w tablicy znajduje się liczba podzielna przez 7.'),
(24, 'Skonstruuj algorytm przeszukujący liniowo ciąg liczbowy sprawdzając przy tymczy wszystkie liczby podzielne są przez 5.', '<img alt=\"zdjecie-2.15\" src=\"zadania/2.15.png\">', 'Dane: Liczba naturalna: n > 0 (liczba elementów tablicy T).\r\nn-elementowa tablica jednowymiarowa zawierająca liczby całkowite: t[0...n-1].', 'Wynik: Komunikat informujący czy w tablicy znajdują się liczby większe od 5.'),
(25, 'Skonstruuj algorytm przeszukujący liniowo ciąg liczbowy z wartownikiem.', '<img alt=\"zdjecie-2.16\" src=\"zadania/2.16.png\">', 'Dane: Liczba naturalna: n > 0 (liczba elementów tablicy T).\r\nLiczba rzeczywista: szukana (wartość elementu szukanego w tablicy T).\r\nn-elementowa tablica jednowymiarowa zawierająca liczby rzeczywiste: T[0...n-1].', 'Wynik: Komunikat informujący, czy w tablicy znajduje się szukany element.'),
(26, 'Skonstruuj algorytm wyznaczający element minimalny spośród n liczb rzeczywistych wprowadzonych z klawiatury.', 'Brak zdjęcia', 'Dane: Liczba naturalna: n > 0(liczba wczytywanych wartości).', 'Wynik: Minimum dla liczb rzeczywistych wprowadzonych z klawiatury: minimum.'),
(27, 'Skonstruuj algorytm wyznaczający element maksymalny spośród n liczb rzeczywistych w tablicy T.', '<img alt=\"zdjecie-2.18\" src=\"zadania/2.18.png\">', 'Dane: Liczba naturalna: n > 0 (liczba elementów tablicy T).\r\nn-elementowa tablica jednowymiarowa zawierająca liczby całkowite: T[0...n-1].', 'Wynik: Maksymalny element tablicy T: maksimum.'),
(28, 'Skonstruuj algorytm poszukujący lidera w zbiorze.', 'Brak zdjęcia', 'Dane: Liczba naturalna: n > 0. (liczba elementów tablicy T).\r\nn-elementowa tablica jednowymiarowa zawierająca liczby rzeczywiste: T[0...n-1] (zbiór, w którym szukamy lidera).', 'Wynik: Lider znaleziony w tablicy T[0...n-1] lub komunikat informujący, że w tablicy nie ma lidera.'),
(29, 'Skonstruuj algorytm sprawdzający, czy n-wyrazowy ciąg liczb całkowitych jest ciągiem rosnącym.', '<img alt=\"zdjecie-2.20\" src=\"zadania/2.20.png\">', 'Dane: Liczba naturalna: n > 1 (liczba elementów tablicy T).\r\nn-elementowa tablica jednowymiarowa zawierająca liczby całkowite: T[0...n-1].', 'Wynik: Komunikat informujący, czy ciąg zapisany w tablicy T jest rosnący.'),
(30, 'Skonstruuj algorytm realizujący sortowanie bąbelkowe.', '<img alt=\"zdjecie-2.21\" src=\"zadania/2.21.png\">', 'Dane: Liczba naturalna: n > 0 (liczba elementów tablicy T).\r\nn-elementowa tablica jednowymiarowa zawierająca liczby rzeczywiste: T[0...n-1].', 'Wynik: Posortowana niemalejąco n-elementowa tablica jednowymiarowa zawierająca liczby rzeczywiste: T[0...n-1].'),
(31, 'Skonstruuj algorytm wykonujący sortowanie przez wybór.', '<img alt=\"zdjecie-2.22\" src=\"zadania/2.22.png\">', 'Dane: Liczba naturalna: n > 0 (liczba elementów tablicy T).\r\nn-elementowa tablica jednowymiarowa zawierająca liczby rzeczywiste: T[0...n-1].', 'Wynik: Posortowana niemalejąco n-elementowa tablica jednowymiarowa zawierająca liczby rzeczywiste: T[0...n-1].'),
(32, 'Skonstruuj algorytm wykonujący porządkowanie przez zliczanie.', '<img alt=\"zdjecie-2.23\" src=\"zadania/2.23.png\">', 'Dane: Liczba naturalna: n > 0 (liczba elementów tablicy T).\r\nLiczba naturalna: n > 0 (wartość, od której wszystkie elementy tablicy T są mniejsze).\r\nn-elementowa tablica jednowymiarowa zawierająza liczby całkowite: T[0...n-1], gdzie 0 <= T[i] < m, dla i = 0, 1,..., n-1 (ciąg do posortowania.', 'Wynik: Posortowana niemalejąco n-elementowa tablica jednowymiarowa zawierająca liczby całkowite: T[0...n-1].'),
(33, 'Skonstruuj algorytm znajdujący jednocześnie minimalny i maksymalny element.', '<img alt=\"zdjecie-2.24\" src=\"zadania/2.24.png\">', 'Dane: Liczba naturalna: n > 0 (liczba elementów tablicy T).\r\nn-elementowa tablica jednowymiarowa zawierająca liczby rzeczywiste: T[0...n-1].', 'Wynik: Najmniejszy element minimum i największy element maksimum w tablicy: T[0...n-1].'),
(34, 'Skonstruuj algorytm wykonujący sortowanie przez scalanie.', '<img alt=\"zdjecie-2.25\" src=\"zadania/2.25.png\">', 'Dane: Liczba naturalna: n > 0 (liczba elementów tablicy T).\r\nn-elementowa tablica jednowymiarowa zawierająca liczby rzeczywiste: T[0...n-1].', 'Wynik: Posortowana niemalejąco n-elementowa tablica jednowymiarowa zawierająca liczby rzeczywiste: T[0...n-1].'),
(35, 'Skonstruuj algorytm wykonujący sortowanie szybkie.', '<img alt=\"zdjecie-2.26\" src=\"zadania/2.26.png\">', 'Dane: Liczba naturalna: n > 0 (liczba elementów tablicy T).\r\nn-elementowa tablica jednowymiarowa zawierająca liczby rzeczywiste: T[0...n-1].', 'Wynik: Posortowana niemalejąco n-elementowa tablica jednowymiarowa zawierająca liczby rzeczywiste: T[0...n-1].'),
(36, 'Skonstruuj algorytm wyznaczający pole obszaru ograniczonego wykresem funkcji f(x), osią OX oraz prostymi p i q z zastosoawniem metody prostokątów.', '<img alt=\"zdjecie-2.27\" src=\"zadania/2.27.png\">', 'Dane: Liczby rzeczywiste: p, q, które spełniają warunek p < q (granice przedziału dla którego obliczamy pole wyznaczonego obszaru).\r\nFunkcja f(x), której wykres jest linią ciągłą w przedziale [p,q].\r\nLiczba naturalna: n > 0 (liczba prostokątów).', 'Wynik: Pole obszaru ograniczonego wykresem funkcji f(x) w przedziale [p,q].'),
(37, 'Skonstruuj algorytm wyznaczający pole obszaru ograniczonego wykresem funkcji f(x), osią OX w przedziale [p, q] z zastosoawniem metody trapezów.', '<img alt=\"zdjecie-2.28\" src=\"zadania/2.28.png\">', 'Dane: Liczby rzeczywiste: p, q, które spełniają warunek p < q (granice przedziału dla którego obliczamy pole wyznaczonego obszaru).\r\nFunkcja f(x), której wykres jest linią ciągłą w przedziale [p,q].\r\nLiczba naturalna: n > 0 (liczba trapezów).', 'Wynik: Pole obszaru ograniczonego wykresem funkcji f(x) w przedziale [p,q].'),
(38, 'Skonstruuj algorytm wykorzystujący kryterium zakończenia obliczeń (a) zdefiniowane wzorem 2.41 (PODRĘCZNIK HELION INFORMATYKA EUROPEJCZYKA CZĘŚĆ 1 STRONA 161).', 'Brak zdjęcia', 'Dane: Liczby rzeczywiste: p, q, które spełniają warunek: p < q (granice przedziału, w którym szukamy mmiejsca zerowego funkcji f(x)).\r\nFunkcja f(x), której wykres jest linią ciągłą w przedziale [p,q] oraz spełnia warunek f(p)*f(q) < 0.\r\nLiczba rzeczywista E1 > 0 (dokładność obliczeń zgodna z kryterium zakończenia algorytmu (a) zdefiniowanym wzorem 2.41 // podręcznik).', 'Wynik: Wartość przybliżona miejsca zerowego funkcji f(x) w przedziale [p,q], wyznaczona z dokładnością E1.\r\n'),
(39, 'Skonstruuj algorytm rozwiązujący problem plecakowy metodą zachłanną.', '<img alt=\"zdjecie-2.30\" src=\"zadania/2.30.png\">', 'Dane: Liczba całkowita: n > 0 (liczba przedmiotów).\r\nNieograniczona liczba każdego z n przedmiotów P1,P2,...,Pn o wartości W[1...n] i wadze C[1..n] uporządkowanych z kryterium podanym wzorem 2.46.\r\nLiczba całkowita: waga > 0 (maksymalna pojemność plecaka).', 'Wynik: Nieujemna liczba każdego z n przedmiotów P1,P2,...,Pn: K[1...n].'),
(40, 'Skonstruuj algorytm rozwiązujący problem plecakowy z zastosowaniem programowania dynamicznego.', 'Brak zdjęcia', 'Dane: Liczba całkowita: n > 0 (liczba przedmiotów).\r\nNieograniczona liczba każdego z n przedmiotów P1,P2,...Pn o wartości W[1...n] i wadze C[1...n].\r\nLiczba całkowita: waga > 0 (maksymalna pojemność plecaka).', 'Wynik: Maksymalna wartość zapakowanego pleaka pobrana z tablicy całkowitej: Wartości[1...n][1...waga] (tablica wartości, w której Wartosci[i][j] to wartość optymalizowanego zapakowania plecaka o pojemności j przedmiotami, których numery zawarte są w przedziale [1,i]).\r\nNumery przedmiotów umieszczonych w plecaku pobrane z tablicy całkowitej: Numery[1...n][1...waga](tablica zawierająca numery przedmiotów dołożonych w ostatnim dopakowaniu plecaka).'),
(41, 'Skonstruuj algorytm sprawdzający, czy podany tekst jest palindromem.', '<img alt=\"zdjecie-2.32\" src=\"zadania/2.32.png\">', 'Dane: Łańcuch: s (zawiera tekst do sprawdzenia).', 'Wynik: Komunikat informujący, czy łańcuch s jest palindromem.'),
(42, 'Skonstruuj algorytm sortujący alfabetycznie łańcuch znaków metodą przez wybór.', 'Brak zdjęcia', 'Dane: Łańcuch niezawierający spacji: s (zawiera tekst do posortowania).', 'Wynik: Łańcuch niezawierający spacji: wynik (zawiera tekst posortowany alfabetycznie).'),
(43, 'Skonstruuj algorytm sprawdzający, czy dwa słowa złożone wyłącznie z liter \"X\" i \"Y\" są anagramami.\r\n', 'Brak zdjęcia', 'Dane: Dwa łańcuchy składające się z liter: \"X\" i \"Y\": s1, s2 (zawierają dwa słowa).', 'Wynik: Komunikat informujący czy łańcuchy s1 i s2 są anagramami.'),
(44, 'Skonstruuj algorytm realizujący naiwne wyszukiwanie wzorca w tekście.', '<img alt=\"zdjecie-2.35\" src=\"zadania/2.35.png\">', 'Dane: Łańcuch znaków: s (zawiera przeszukiwany tekst).\r\nŁańcuch znaków: wzorzec (zawiera szukany wzorzec).', 'Wynik: Liczba całkowita: n(liczba wystąpień wzorca w tekście).\r\nTablica jednowymiarowa zawierająca liczby całkowite: T[0...n-1](ciąg liczb wskazujących pozycje, od których rozpoczynaja się wystąpienia szukanego wzorca).'),
(45, 'Skonstruuj algorytm szyfrujący tekst jawny metodą kolumową.', '<img alt=\"zdjecie-2.36\" src=\"zadania/2.36.png\">', 'Dane: Łańcuch znaków: teksy (zawiera jawny tekst).\r\nLiczba naturalna: n (zawiera liczbę kolumn).\r\nn-elementowa tablica całkowita: klucz[0...n-1](zawiera permuntacje numerów kolumn, stanowi klucz algorytmu).', 'Wynik: Łańcuch znaków: wynik (zawiera kryptogram).'),
(46, 'Skonstruuj algorytm realizujący szyfrowanie metodą płotową o wyskokości 3.', '<img alt=\"zdjecie-2.37\" src=\"zadania/2.37.png\">', 'Dane: Łańcuch znaków: teksy (zawiera jawny tekst).', 'Wynik: Łańcuch znaków: wynik (zawiera kryptogram).'),
(47, 'Skonstruuj algorytm realizujący szyfr Cezara.', '<img alt=\"zdjecie-2.38\" src=\"zadania/2.38.png\">', 'Dane: Łańcuch znaków: alfabet (zawieta alfabet jawny).\r\nŁańcuch znaków: tekst (zawiera tekst jawny).\r\nLiczba naturalna: klucz < liczba znaków w alfabecie jawnym.', 'Wynik: Łańcuch znaków: wynik (zawiera kryptogram).');

-- --------------------------------------------------------

--
-- Struktura tabeli dla tabeli `uzytkownicy`
--

CREATE TABLE `uzytkownicy` (
  `id_uzytkownika` int(11) NOT NULL,
  `login` varchar(30) NOT NULL,
  `haslo` text NOT NULL,
  `email` varchar(40) NOT NULL,
  `data_zalozenia` date NOT NULL,
  `uprawnienia` varchar(15) NOT NULL DEFAULT 'user'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Zrzut danych tabeli `uzytkownicy`
--

INSERT INTO `uzytkownicy` (`id_uzytkownika`, `login`, `haslo`, `email`, `data_zalozenia`, `uprawnienia`) VALUES
(1, 'bartek', '$2y$10$T6DXmaQlpEGoprP.Oum/vOzd0YRtAebm29kfgHaNBG/JaF.jyeRzC', 'bartekwiechec@onet.eu', '2017-11-25', 'administrator');

--
-- Indeksy dla zrzutów tabel
--

--
-- Indexes for table `odpowiedzi`
--
ALTER TABLE `odpowiedzi`
  ADD PRIMARY KEY (`id_odpowiedzi`),
  ADD KEY `id_uzytkownika` (`id_uzytkownika`),
  ADD KEY `id_pytania` (`id_pytania`);

--
-- Indexes for table `pytania`
--
ALTER TABLE `pytania`
  ADD PRIMARY KEY (`id_pytania`);

--
-- Indexes for table `uzytkownicy`
--
ALTER TABLE `uzytkownicy`
  ADD PRIMARY KEY (`id_uzytkownika`),
  ADD UNIQUE KEY `login` (`login`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT dla tabeli `odpowiedzi`
--
ALTER TABLE `odpowiedzi`
  MODIFY `id_odpowiedzi` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=48;

--
-- AUTO_INCREMENT dla tabeli `pytania`
--
ALTER TABLE `pytania`
  MODIFY `id_pytania` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=48;

--
-- AUTO_INCREMENT dla tabeli `uzytkownicy`
--
ALTER TABLE `uzytkownicy`
  MODIFY `id_uzytkownika` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2;

--
-- Ograniczenia dla zrzutów tabel
--

--
-- Ograniczenia dla tabeli `odpowiedzi`
--
ALTER TABLE `odpowiedzi`
  ADD CONSTRAINT `odpowiedzi_ibfk_1` FOREIGN KEY (`id_uzytkownika`) REFERENCES `uzytkownicy` (`id_uzytkownika`),
  ADD CONSTRAINT `odpowiedzi_ibfk_2` FOREIGN KEY (`id_pytania`) REFERENCES `pytania` (`id_pytania`);
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
